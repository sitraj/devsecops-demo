name: CI - Security Scan, Build and Push Docker Image

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep
        run: |
          mkdir -p .semgrep
          semgrep --config p/default --config .semgrep/ --sarif --output .semgrep/semgrep.sarif

      - name: Upload SARIF to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: .semgrep/semgrep.sarif

      - name: Save Semgrep report
        if: always()
        run: semgrep --config auto --json > semgrep-report.json

      - name: Upload Semgrep report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.json

  dependency-scan:
    runs-on: ubuntu-latest
    # needs: [security-scan]
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Trivy FS Scan (Dependencies)
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: "fs"
          scan-ref: .
          format: "sarif"
          output: "trivy-report.sarif"

      - name: Upload Trivy FS Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-report.sarif"

  iac-scan:
    runs-on: ubuntu-latest
    # needs: [security-scan]
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./infra/terraform
          additional_args: --minimum-severity CRITICAL --format sarif --out ./tfsec.sarif

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./infra/terraform
          framework: terraform
          output_format: sarif
          output_file_path: ./checkov.sarif
          soft_fail: true

      - name: Upload tfsec report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./tfsec.sarif

      - name: Upload Checkov report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./checkov.sarif

  iac-policy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.45.0/conftest_0.45.0_Linux_x86_64.tar.gz
          tar xzf conftest_0.45.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin/

      - name: Configure AWS Credentials (for plan only)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform -chdir=infra/terraform init

      - name: Terraform Plan
        run: terraform -chdir=infra/terraform plan -out tfplan

      - name: Terraform Show JSON
        run: terraform -chdir=infra/terraform show -json tfplan > tfplan.json

      - name: Run Conftest Policies
        run: conftest test infra/terraform/tfplan.json -p policy/ --all-namespaces


  build-and-push:
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-scan, iac-scan, iac-policy]   # ðŸ”¥ CHANGED: wait for scans
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # ðŸ”¥ CHANGED: build locally first, don't push yet
      - name: Build Docker image (local only)
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: devsecops-demo:latest

      # ðŸ”¥ CHANGED: scan local image before pushing
      - name: Run Trivy Image Scan (local)
        uses: aquasecurity/trivy-action@0.16.1
        with:
          image-ref: devsecops-demo:latest
        #   severity: CRITICAL
        #   exit-code: 1
          ignore-unfixed: true
          format: sarif
          output: trivy-image-report.sarif

      - name: Upload Trivy Image Report
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-image-report.sarif"

      # ðŸ”¥ CHANGED: now push after scan passes
      - name: Push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/devsecops-demo:latest
